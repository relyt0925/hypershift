
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: machineconfigservers.hypershift.openshift.io
spec:
  group: hypershift.openshift.io
  names:
    kind: MachineConfigServer
    listKind: MachineConfigServerList
    plural: machineconfigservers
    shortNames:
    - mcs
    - mcss
    singular: machineconfigserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Version
      jsonPath: .status.version
      name: Version
      type: string
    - description: Host
      jsonPath: .status.host
      name: Host
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MachineConfigServer is the Schema for the MachineConfigServers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MachineConfigServerSpec defines the desired state of MachineConfigServer
            properties:
              ignitionService:
                description: IgnitionService defines how the MachineConfigServer service is published in the management cluster
                properties:
                  nodePort:
                    description: NodePort is used to define extra metadata for the NodePort publishing strategy.
                    properties:
                      address:
                        description: Address is the host/ip that the nodePort service is exposed over
                        type: string
                      port:
                        description: Port is the nodePort of the service. If <=0 the nodePort is dynamically assigned when the service is created
                        format: int32
                        type: integer
                    required:
                    - address
                    type: object
                  type:
                    description: Type defines the publishing strategy used for the service.
                    enum:
                    - LoadBalancer
                    - NodePort
                    - Route
                    type: string
                required:
                - type
                type: object
              releaseImage:
                description: Release specifies the release image to use for this MachineConfigServer
                type: string
            required:
            - ignitionService
            - releaseImage
            type: object
          status:
            description: MachineConfigServerStatus defines the observed state of MachineConfigServer
            properties:
              host:
                type: string
              port:
                format: int32
                type: integer
              version:
                description: Version is the semantic version of the release used by the mcs. For a mcs a given version represents the ignition config served by the ignition endpoint referenced in the userdata secret.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
