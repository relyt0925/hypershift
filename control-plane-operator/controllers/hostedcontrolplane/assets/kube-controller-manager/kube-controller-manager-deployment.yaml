kind: Deployment
apiVersion: apps/v1
metadata:
  name: kube-controller-manager
spec:
{{ if eq .ControllerAvailabilityPolicy "HighlyAvailable" }}
  replicas: 3
{{ else }}
  replicas: 1
{{ end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  selector:
    matchLabels:
      app: kube-controller-manager
  template:
    metadata:
      labels:
        app: kube-controller-manager
        clusterID: "{{ .ClusterID }}"
{{ if .RestartDate }}
      annotations:
        openshift.io/restartedAt: "{{ .RestartDate }}"
{{ end }}
    spec:
      imagePullSecrets:
      - name: pull-secret
      tolerations:
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: clusterID
                      operator: In
                      values: ["{{ .ClusterID }}"]
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["kube-controller-manager"]
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["kube-controller-manager"]
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
      automountServiceAccountToken: false
{{ if .MasterPriorityClass }}
      priorityClassName: {{ .MasterPriorityClass }}
{{ end }}
      containers:
      - name: kube-controller-manager
        image: {{ imageFor "hyperkube" }}
        {{- if eq .CloudProvider "aws" }}
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /etc/kubernetes/provider/credentials
        - name: AWS_EC2_METADATA_DISABLED
          value: "true"
        {{- end }}
        command:
        - hyperkube
        - kube-controller-manager
        args:
        - "--openshift-config=/etc/kubernetes/cmconfig/config.yaml"
        - "--kubeconfig=/etc/kubernetes/secret/kubeconfig"
        - "--authentication-kubeconfig=/etc/kubernetes/secret/kubeconfig"
        - "--authorization-kubeconfig=/etc/kubernetes/secret/kubeconfig"
        - "--allocate-node-cidrs=true"
        - "--cert-dir=/var/run/kubernetes"
{{- if eq .CloudProvider "aws" }}
        - "--cloud-config=/etc/kubernetes/config/aws.conf"
{{- end }}
        - "--cloud-provider={{ .CloudProvider }}"
        - "--cluster-cidr={{ .PodCIDR }}"
        - "--cluster-signing-cert-file=/etc/kubernetes/secret/cluster-signer.crt"
        - "--cluster-signing-key-file=/etc/kubernetes/secret/cluster-signer.key"
        - "--configure-cloud-routes=false"
        - "--controllers=*"
        - "--controllers=-ttl"
        - "--controllers=-bootstrapsigner"
        - "--controllers=-tokencleaner"
        - "--enable-dynamic-provisioning=true"
        - "--flex-volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec"
        - "--kube-api-burst=300"
        - "--kube-api-qps=150"
        - "--leader-elect-resource-lock=configmaps"
        - "--leader-elect=true"
        - "--leader-elect-retry-period=3s"
        - "--port=0"
        - "--root-ca-file=/etc/kubernetes/config/root-ca.crt"
        - "--secure-port=10257"
        - "--service-account-private-key-file=/etc/kubernetes/secret/service-account.key"
        - "--service-cluster-ip-range={{ .ServiceCIDR }}"
        - "--use-service-account-credentials=true"
        - "--experimental-cluster-signing-duration=26280h"
{{ range $featureGate := .DefaultFeatureGates }}
        - "--feature-gates={{ $featureGate }}"
{{ end }}
{{ range $featureGate := .ExtraFeatureGates }}
        - "--feature-gates={{ $featureGate }}"
{{ end }}
{{ if .KubeControllerManagerResources }}
        resources:{{ range .KubeControllerManagerResources }}{{ range .ResourceRequest }}
          requests: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
          limits: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{ end }}
        volumeMounts:
        - mountPath: /etc/kubernetes/cmconfig
          name: cmconfig
        - mountPath: /etc/kubernetes/config
          name: config
        - mountPath: /etc/kubernetes/secret
          name: secret
        - mountPath: /var/run/kubernetes
          name: certdir
        - mountPath: /var/log/kube-controller-manager
          name: logs
{{- if .ProviderCredsSecretName }}
        - name: provider-creds
          mountPath: /etc/kubernetes/provider
{{- end }}
        workingDir: /var/log/kube-controller-manager
      volumes:
      - secret:
          secretName: kube-controller-manager
        name: secret
      - configMap:
          name: kube-controller-manager-config
        name: cmconfig
      - configMap:
          name: kube-controller-manager
        name: config
      - emptyDir: {}
        name: logs
      - emptyDir: {}
        name: certdir
{{- if .ProviderCredsSecretName }}
      - name: provider-creds
        secret:
          secretName: {{ .ProviderCredsSecretName }}
{{- end }}
